version: "3"
services:
  redis:
    image: redis
    restart: unless-stopped
    ports:
      - 6379:6379

  redis_exporter:
    image: oliver006/redis_exporter
    restart: unless-stopped
    ports:
      - 9121:9121
    environment:
      REDIS_ADDR: redis://redis:6379
    depends_on:
     - redis

  mysql:
    image: mysql/mysql-server
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: gorse
      MYSQL_USER: gorse
      MYSQL_PASSWORD: gorse_pass
    volumes:
      - mysql_data:/var/lib/mysql

  mysqld-exporter:
    image: prom/mysqld-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: gorse:gorse_pass@(mysql:3306)/
    ports:
      - 9104:9104
    depends_on:
     - mysql

  worker:
    image: zhenghaoz/gorse-worker:0.4
    restart: unless-stopped
    ports:
      - 8089:8089
    command: >
      --master-host master --master-port 8086 
      --http-host 0.0.0.0 --http-port 8089
      --log-path /var/log/gorse/worker.log 
      --cache-path /var/lib/gorse/worker_cache.data
    volumes:
      - log_data:/var/log/gorse
      - worker_data:/var/lib/gorse
    depends_on:
      - master

  server:
    image: zhenghaoz/gorse-server:0.4
    restart: unless-stopped
    ports:
      - 8087:8087
    environment:
      GORSE_CACHE_STORE: redis://redis:6379/0
      GORSE_DATA_STORE: mysql://gorse:gorse_pass@tcp(mysql:3306)/gorse?parseTime=true
    command: >
      --master-host master --master-port 8086 
      --http-host 0.0.0.0 --http-port 8087
      --log-path /var/log/gorse/server.log 
      --cache-path /var/lib/gorse/server_cache.data
    volumes:
      - log_data:/var/log/gorse
      - server_data:/var/lib/gorse
    depends_on:
      - master

  master:
    image: zhenghaoz/gorse-master:0.4
    restart: unless-stopped
    ports:
      - 8086:8086
      - 8088:8088
    environment:
      GORSE_CACHE_STORE: redis://redis:6379
      GORSE_DATA_STORE: mysql://gorse:gorse_pass@tcp(mysql:3306)/gorse?parseTime=true
    command: >
      -c /etc/gorse/config.toml 
      --log-path /var/log/gorse/master.log 
      --cache-path /var/lib/gorse/master_cache.data
    volumes:
      - ./config.toml:/etc/gorse/config.toml
      - log_data:/var/log/gorse
      - master_data:/var/lib/gorse
    depends_on:
      - redis
      - mysql

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    expose:
      - 9090

  grafana:
    image: grafana/grafana:8.4.6
    restart: unless-stopped
    environment:
      PROMETHEUS_HOST: prometheus
      PROMETHEUS_PORT: 9090
      LOKI_HOST: loki
      LOKI_PORT: 3100
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
    ports:
      - 3000:3000

  loki:
    image: grafana/loki:2.3.0
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - 3100:3100
    volumes:
      - ./loki.yaml:/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    ports:
      - 9080:9080
    volumes:
      - log_data:/var/log/gorse
      - ./promtail.yml:/etc/promtail/config.yml

  jobs:
    build:
      context: jobs
    restart: unless-stopped
    environment:
      GORSE_ADDRESS: http://server:8087
      GORSE_API_KEY: 19260817
      BROKER_ADDRESS: redis://redis:6379/1

  cronjobs:
    build:
      context: cronjobs
    restart: unless-stopped
    environment:
      GORSE_ADDRESS: http://server:8087
      GORSE_API_KEY: 19260817
      GITHUB_ACCESS_TOKEN: xxxxxxxxxxxxxxxxxxxxxxxxx

  web:
    build: .
    restart: unless-stopped
    ports:
      - 5000:5000
    environment:
      GORSE_ADDRESS: http://server:8087
      GORSE_API_KEY: 19260817
      BROKER_ADDRESS: redis://redis:6379/1
      OAUTHLIB_INSECURE_TRANSPORT: "true"
      GITHUB_OAUTH_CLIENT_ID: xxxxxxxxxxxxxxxxxxxxxxxxx
      GITHUB_OAUTH_CLIENT_SECRET: xxxxxxxxxxxxxxxxxxxxxxxxx
      SECRET_KEY: xxxxxxxxxxxxxxxxxxxxxxxxx

volumes:
  mysql_data:
  worker_data:
  server_data:
  master_data:
  log_data:
  prometheus_data:
  grafana_data:
